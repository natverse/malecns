% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neuprint.R
\name{mcns_neuprint_meta}
\alias{mcns_neuprint_meta}
\title{Fetch neuprint metadata for malecns neurons}
\usage{
mcns_neuprint_meta(
  ids = NULL,
  conn = mcns_neuprint(),
  roiInfo = FALSE,
  simplify.xyz = TRUE,
  ...
)
}
\arguments{
\item{ids}{body ids. When missing all bodies known to DVID are returned.}

\item{conn}{Optional, a \code{\link{neuprint_connection}} object, which also
specifies the neuPrint server. Defaults to \code{\link[malevnc]{manc_neuprint}()} to
ensure that query is against the VNC dataset.}

\item{roiInfo}{whether to include the \code{roiInfo} field detailing synapse
numbers in different locations. This is omitted by default as it is
returned as a character vector of unprocessed JSON.}

\item{simplify.xyz}{Whether to simplify columns containing XYZ locations to a
simple \code{"x,y,z"} format rather than a longer form referencing a schema
at \code{spatialreference.org}. Defaults to \code{TRUE}.}

\item{...}{Additional arguments passed to \code{\link{neuprint_get_meta}}}
}
\value{
A data.frame with one row for each (unique) input id and NAs for all
  columns except bodyid when neuprint holds no metadata.
}
\description{
Fetch neuprint metadata for malecns neurons
}
\details{
in contrast to \code{malevnc::\link{manc_neuprint_meta}} we leave
  bodyids as numeric (doubles) since flyem now guarantee them to be less than
  2^53 i.e. within the range in which doubles can exactly represent numeric
  ids.
}
\examples{
\donttest{
library(dplyr)
# fetch metatada for all bodies in neuprint
mnm=mcns_neuprint_meta()
# fetch metadata for all bodies with a somaLocation
mnm.soma=mcns_neuprint_meta("where:exists(n.somaLocation)")

# type or instance present
mnm.ti <- mcns_neuprint_meta('where:exists(n.type) OR exists(n.instance)')

# neurons without a superclass but quite a few synapses
mnm.nc=mcns_neuprint_meta("where:NOT exists(n.superclass) AND n.synweight>2000")
mnm.nc \%>\% arrange(desc(synweight))
}
library(dplyr)
# Which neurons don't have a superclass, but possibly should
mnm.nsc=mcns_neuprint_meta("where:NOT exists(n.superclass)")
mnm.nsc \%>\% count(statusLabel)

# neurons that are RT or PRT should probably have a superclass
mnm.nscprt=mcns_neuprint_meta("where:NOT exists(n.superclass) AND n.statusLabel CONTAINS 'Roughly'")
mnm.nscprt \%>\% count()
}
\seealso{
Other annotations: 
\code{\link{mcns_body_annotations}()},
\code{\link{mcns_dvid_annotations}()},
\code{\link{mcns_soma_side}()}
}
\concept{annotations}
