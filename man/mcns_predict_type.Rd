% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/type.R
\name{mcns_predict_type}
\alias{mcns_predict_type}
\title{Predict the cell type of male cns neurons from type and name/instance fields}
\usage{
mcns_predict_type(
  ids,
  method = c("auto", "instance", "type", "foreign_type", "all"),
  prefer.foreign = FALSE
)
}
\arguments{
\item{ids}{Body ids in any form understandable by \code{\link{mcns_ids}}}

\item{method}{The prediction method to use (type, instance or auto, which
uses type when available, instance otherwise). The special value of all
adds 3 columns to the metadata data.frame \code{type_t, type_i, type_a}
containing the results of each of the other methods.}

\item{prefer.foreign}{Whether to prefer a foreign type (flywire, manc,
hemibrain) when available. This may be useful for integration across
datasets (see details).}
}
\value{
A data.frame when \code{type='all'}, a character vector otherwise.
}
\description{
Predict the cell type of male cns neurons from type and name/instance fields
}
\details{
For the time being when the instance is of the form 12345_L then
  12345 will be returned as the type. This obviously isn't very useful for
  most purposes (use \code{\link{mcns_predict_group}} if you want the group).

Note that when \code{prefer.foreign=TRUE} or
  \code{method='foreign_type'}, if both flywire and manc types are available,
  the flywire type will be preferred \emph{except} for (sensory) ascending
  neurons. The thinking behind this exception is that the types given in
  flywire for the truncated axons of the ascending neurons are unlikely to be
  canonical.
}
\examples{
\donttest{
library(dplyr)
mnm.ti <- mcns_neuprint_meta('where:exists(n.type) OR exists(n.instance)')
# Descending neurons with the wrong superclass
mnm.ti \%>\%
  mutate(ptype=mcns_predict_type(.)) \%>\%
  filter(grepl("DN[abdgpx]", ptype)) \%>\%
  filter(superclass!='Descending' | is.na(superclass))

# report all the different types available for these two VPNs
mcns_predict_type("LoVP106", method = 'all') \%>\%
  select(matches('.ype'))
# report just one type, preferring malecns type (the default)
mcns_predict_type("LoVP106")
# ... or preferring the foreign type (flywire in this case)
mcns_predict_type("LoVP106", prefer.foreign=TRUE)
}

}
\seealso{
\code{\link{mcns_predict_group}}
}
