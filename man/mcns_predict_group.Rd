% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/group.R
\name{mcns_predict_group}
\alias{mcns_predict_group}
\title{Predict the group of neurons using instance or type information}
\usage{
mcns_predict_group(
  ids,
  method = c("auto", "group", "instance", "type", "all"),
  badtypes = c(NA, "", "Lamina_R1-R6", "Descending", "KC", "ER", "LC", "PB",
    "Ascending Interneuron", "Delta", "P1_L candidate", "LT", "MeMe", "PFGs", "Mi", "VT",
    "ML", "EL", "FB", "Dm", "DNp", "FC", "OL", "T", "Y")
)
}
\arguments{
\item{ids}{Body ids in any form understood by \code{\link{mcns_ids}}. If you
have a metadata dataframe as returned by \code{\link{mcns_neuprint_meta}}
then this is ideal as that function is called under the hood.}

\item{method}{A string specifying which of 3 methods to use to identify the
group. \code{"all"} means to return all 3, while \code{"auto"} (the
default) means to look at each method in turn successively filling in
missing group values.}

\item{badtypes}{Values of the type column which should be ignored for the
purposes of defining cell type groups. This will be because they contain
bad values or because the types are too broad to be very useful.}
}
\value{
For \code{method="all"} a dataframe as returned by
  \code{\link{mcns_neuprint_meta}} with additional columns
  \code{instance_group} and \code{type_group}. Otherwise a numeric vector.
}
\description{
Predict the group of neurons using instance or type information
}
\details{
Grouping information for neurons in the male cns is presently
  scattered in several locations. These include the numeric group field, the
  type field or the instance field. If the type field has the same value, the
  neurons should form a group. However there are some values
}
\examples{
\donttest{
library(dplyr)
# return all body ids with a group type or instance
tig_ids=mcns_ids('where:exists(n.group) OR exists(n.type) OR exists (n.instance)')
allg=mcns_predict_group(tig_ids, method = 'all')
# neurons where the recorded group and instance group disagree
allg \%>\% filter(!is.na(group) & !is.na(instance_group) & group!=instance_group)
}
\dontrun{
# neurons where the recorded group and type group disagree
type_group_mismatch <- allg \%>\% filter(!is.na(group) & !is.na(type_group) & group!=type_group)
allg \%>\%
  filter(group \%in\% type_group_mismatch$group | type_group \%in\% type_group_mismatch$type_group) \%>\%
 select(bodyid, type, name, group, type_group, instance_group) \%>\%
 arrange(type, group) \%>\% View
}
}
\seealso{
\code{\link{mcns_predict_type}}
}
